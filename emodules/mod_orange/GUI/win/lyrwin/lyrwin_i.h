/*
* Copyright (c) 2019-2025 Allwinner Technology Co., Ltd. ALL rights reserved.
*
* Allwinner is a trademark of Allwinner Technology Co.,Ltd., registered in
* the the People's Republic of China and other countries.
* All Allwinner Technology Co.,Ltd. trademarks are used with permission.
*
* DISCLAIMER
* THIRD PARTY LICENCES MAY BE REQUIRED TO IMPLEMENT THE SOLUTION/PRODUCT.
* IF YOU NEED TO INTEGRATE THIRD PARTY’S TECHNOLOGY (SONY, DTS, DOLBY, AVS OR MPEGLA, ETC.)
* IN ALLWINNERS’SDK OR PRODUCTS, YOU SHALL BE SOLELY RESPONSIBLE TO OBTAIN
* ALL APPROPRIATELY REQUIRED THIRD PARTY LICENCES.
* ALLWINNER SHALL HAVE NO WARRANTY, INDEMNITY OR OTHER OBLIGATIONS WITH RESPECT TO MATTERS
* COVERED UNDER ANY REQUIRED THIRD PARTY LICENSE.
* YOU ARE SOLELY RESPONSIBLE FOR YOUR USAGE OF THIRD PARTY’S TECHNOLOGY.
*
*
* THIS SOFTWARE IS PROVIDED BY ALLWINNER"AS IS" AND TO THE MAXIMUM EXTENT
* PERMITTED BY LAW, ALLWINNER EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,
* WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION REGARDING
* THE TITLE, NON-INFRINGEMENT, ACCURACY, CONDITION, COMPLETENESS, PERFORMANCE
* OR MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
* IN NO EVENT SHALL ALLWINNER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS, OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*/
#ifndef __LAYER_I_H__
#define __LAYER_I_H__

#include "../win_i.h"
#include "fb_ops.h"

#define GUI_CURSOR_NOINIT           0
#define GUI_CURSOR_SHOW             1
#define GUI_CURSOR_HIDE             2

#define GUI_LYRWIN_STA_ONEX         (GUI_LYRWIN_STA_ERR + 1)
#define GUI_LYRWIN_STA_OFFEX        (GUI_LYRWIN_STA_ERR + 2)
#define GUI_LYRWIN_STA_SLEEPEX      (GUI_LYRWIN_STA_ERR + 3)
#define GUI_LYRWIN_STA_SUSPENDEX    (GUI_LYRWIN_STA_ERR + 4)

void    GUI_LyrLock(void);
void    GUI_LyrUnlock(void);
__u16   GUI_LyrLockAccept(void);
void    GUI_LyrInitOS(void);

extern  __s32 GUI_LogicLayerSetScnWin(__u8 dir, __mp *disp_handle, __hdle hlayer, __rect_t *rect);

extern  __s32 GUI_LogicLayerSetSrcWin(__u8 dir, __mp *disp_handle, __hdle hlayer, __rect_t *rect);

extern  __s32 GUI_LogicLayerSetPara(__u8 dir, __mp *disp_handle, __hdle hlayer, __disp_layer_para_t *player);

extern  __s32 GUI_LogicLayerRequest(__u8 dir, __mp *disp_handle, __hdle hlayer, __disp_layer_para_t *player);

extern  __s32 GUI_LogicLayerSetFb(__u8 dir, __mp *disp_handle, __hdle hlayer, FB *pfb);

#endif  /* #define __LAYER_PRIVATE_H__  */
