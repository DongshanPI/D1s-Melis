/*
* Copyright (c) 2019-2025 Allwinner Technology Co., Ltd. ALL rights reserved.
*
* Allwinner is a trademark of Allwinner Technology Co.,Ltd., registered in
* the the People's Republic of China and other countries.
* All Allwinner Technology Co.,Ltd. trademarks are used with permission.
*
* DISCLAIMER
* THIRD PARTY LICENCES MAY BE REQUIRED TO IMPLEMENT THE SOLUTION/PRODUCT.
* IF YOU NEED TO INTEGRATE THIRD PARTY’S TECHNOLOGY (SONY, DTS, DOLBY, AVS OR MPEGLA, ETC.)
* IN ALLWINNERS’SDK OR PRODUCTS, YOU SHALL BE SOLELY RESPONSIBLE TO OBTAIN
* ALL APPROPRIATELY REQUIRED THIRD PARTY LICENCES.
* ALLWINNER SHALL HAVE NO WARRANTY, INDEMNITY OR OTHER OBLIGATIONS WITH RESPECT TO MATTERS
* COVERED UNDER ANY REQUIRED THIRD PARTY LICENSE.
* YOU ARE SOLELY RESPONSIBLE FOR YOUR USAGE OF THIRD PARTY’S TECHNOLOGY.
*
*
* THIS SOFTWARE IS PROVIDED BY ALLWINNER"AS IS" AND TO THE MAXIMUM EXTENT
* PERMITTED BY LAW, ALLWINNER EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,
* WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION REGARDING
* THE TITLE, NON-INFRINGEMENT, ACCURACY, CONDITION, COMPLETENESS, PERFORMANCE
* OR MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
* IN NO EVENT SHALL ALLWINNER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS, OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*/
#ifndef _UPDATE_NOR_
#define _UPDATE_NOR_
#include <typedef.h>
#include <mod_defs.h>
#include "image/image.h"

//#define UPDATE_DEBUG
typedef enum {
	UPDATE_STATUS_FW_OPEN_FAIL = 0,
	UPDATE_STATUS_GET_GPT_FAIL,
	UPDATE_STATUS_BOOT0_FAIL,
	UPDATE_STATUS_PRIVATE_FAIL,
	UPDATE_STATUS_GPT_FAIL,
	UPDATE_STATUS_NORMAL_PART_FAIL,
	UPDATE_STATUS_UPDATE_WATITING,
	UPDATE_STATUS_UPDATE_ING,
	UPDATE_STATUS_UPDATE_FINSH,
} Update_Status_t;

extern  __s32 UPDATE_MInit(void);
extern  __s32 UPDATE_MExit(void);
extern  __mp *UPDATE_MOpen(__u32 mid, __u32 mode);
extern  __s32 UPDATE_MClose(__mp *mp);
extern  __u32 UPDATE_MRead(void *pdata, __u32 size, __u32 n, __mp *mp);
extern  __u32 UPDATE_MWrite(const void *pdata, __u32 size, __u32 n, __mp *mp);
extern  long UPDATE_MIoctrl(__mp *mp, __u32 cmd, __s32 aux, void *pbuffer);

#endif /* _UPDATE_NOR_ */
